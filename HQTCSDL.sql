
CREATE TABLE SACH (
    MSSACH SMALLINT PRIMARY KEY, 
    TENSACH NVARCHAR(50), 
    NAMXB SMALLDATETIME, 
    SL TINYINT 
);

CREATE TABLE TACGIA (
    MATG SMALLINT PRIMARY KEY, 
    TENTACGIA NVARCHAR(50), 
    DIACHI NVARCHAR(100)
);
CREATE TABLE NHAXB (
    MAXNB SMALLINT PRIMARY KEY, 
    TENNXB NVARCHAR(50), 
    DIACHI NVARCHAR(100)
);
CREATE TABLE MALOAI (
    MALOAI SMALLINT PRIMARY KEY, 
    TENLOAI NVARCHAR(50), 
   
);

CREATE TABLE NGONNGU (
    MANN SMALLINT PRIMARY KEY, 
    TENNN NVARCHAR(20), 
);
CREATE TABLE KHO (
    MAKHO SMALLINT PRIMARY KEY, 
    TENKHO NVARCHAR(20), 
	SUCCHUA SMALLINT
);

CREATE TABLE SINHVIEN (
    MASV SMALLINT PRIMARY KEY, 
    TENSV NVARCHAR(50), 
	LOP VARCHAR(10),
	SODT VARCHAR(12),
	DIACHI NVARCHAR(100)
);
CREATE TABLE PHIEUMUON (
    MAPM SMALLINT PRIMARY KEY, 
    NGAYMUON SMALLDATETIME,
	NGAYTRADUKIEN SMALLDATETIME
);
CREATE TABLE SACH_TACGIA (
    MSSACH SMALLINT,
    MATG SMALLINT,
    FOREIGN KEY (MSSACH) REFERENCES SACH(MSSACH),
    FOREIGN KEY (MATG) REFERENCES TACGIA(MATG)
);
CREATE TABLE SACH_NHAXB (
    MSSACH SMALLINT,
    MAXNB SMALLINT,
    FOREIGN KEY (MSSACH) REFERENCES SACH(MSSACH),
    FOREIGN KEY (MAXNB) REFERENCES NHAXB(MAXNB)
);
CREATE TABLE SACH_LOAISACH (
    MSSACH SMALLINT,
    MALOAI SMALLINT,
    FOREIGN KEY (MSSACH) REFERENCES SACH(MSSACH),
    FOREIGN KEY (MALOAI) REFERENCES MALOAI(MALOAI)
);
CREATE TABLE SACH_NGONNGU (
    MSSACH SMALLINT,
    MANN SMALLINT,
    FOREIGN KEY (MSSACH) REFERENCES SACH(MSSACH),
    FOREIGN KEY (MANN) REFERENCES NGONNGU(MANN)
);
CREATE TABLE KHO_SACH (
    MAKHO SMALLINT,
    MSSACH SMALLINT,
    FOREIGN KEY (MAKHO) REFERENCES KHO(MAKHO),
    FOREIGN KEY (MSSACH) REFERENCES SACH(MSSACH)
);
CREATE TABLE SINHVIEN_SACH (
    MASV SMALLINT,
    MSSACH SMALLINT,
    FOREIGN KEY (MASV) REFERENCES SINHVIEN(MASV),
    FOREIGN KEY (MSSACH) REFERENCES SACH(MSSACH)
);
CREATE TABLE SINHVIEN_PHIEUMUON (
    MASV SMALLINT,
    MAPM SMALLINT,
    FOREIGN KEY (MASV) REFERENCES SINHVIEN(MASV),
    FOREIGN KEY (MAPM) REFERENCES PHIEUMUON(MAPM)
); 

INSERT INTO SACH (MSSACH, TENSACH, NAMXB, SL) VALUES
('11000', 'Code Complete 2', 2000, 5),
('11001', 'The Mythical Man-Month', 2001, 8),
('11002', 'Don’t Make Me Think', 2002, 3),
('11003', 'Peopleware', 2003, 6),
('11004', 'The Design of Everyday Things', 2004, 2),
('11005', 'Programming Pearls', 2005, 7),
('11006', 'The Pragmatic Programmer', 2006, 4),
('11007', 'Designing Web Usability', 2007, 9),
('11008', 'Yellow book – Rob Miles', 2001, 8),
('11009', 'C++ GUI Programming', 2002, 3),
('11010', 'Clean code', 2003, 6),
('11011', 'Core HTML5 Canvas', 2004, 2),
('11012', 'About Face 3.0', 2005, 7),
('11013', 'Mastering Regular Expressions', 2006, 4),
('11014', 'Advanced Linux Programing ', 2007, 9);


INSERT INTO TACGIA (MATG, TENTACGIA, DIACHI) VALUES
('12000', 'Steve McConnell', '371 đường Nguyễn Kiệm Quận Gò Vấp'),
('12001', 'Fred Brooks', '371 đường Nguyễn Kiệm Quận Gò Vấp'),
('12002', 'Steve Krug', '371 đường Nguyễn Kiệm Quận Gò Vấp'),
('12003', 'Tom DeMarco, Timothy R. Lister', '371 đường Nguyễn Kiệm Quận Gò Vấp'),
('12004', 'Donald Norman', '371 đường Nguyễn Kiệm Quận Gò Vấp'),
('12005', 'Jon Bentley', '371 đường Nguyễn Kiệm Quận Gò Vấp'),
('12006', 'Dave Thomas', '371 đường Nguyễn Kiệm Quận Gò Vấp'),
('12007', 'Jakob Nielsen', '371 đường Nguyễn Kiệm Quận Gò Vấp'),
('12008', 'Amitava Kumar', '371 đường Nguyễn Kiệm Quận Gò Vấp'),
('12009', 'Jasmin Blanchette', '371 đường Nguyễn Kiệm Quận Gò Vấp'),
('12010', 'Robert C. Martin ', '371 đường Nguyễn Kiệm Quận Gò Vấp'),
('12011', 'David Geary', '371 đường Nguyễn Kiệm Quận Gò Vấp'),
('12012', 'Cooper, Alan, Reimann, Robert, Cronin, David', '371 đường Nguyễn Kiệm Quận Gò Vấp'),
('12013', 'Jeffrey EF Friedl', '371 đường Nguyễn Kiệm Quận Gò Vấp'),
('12014', 'Mark L.Mitchell, Alex Samual, Jeffey Oldham', '371 đường Nguyễn Kiệm Quận Gò Vấp');

INSERT INTO NHAXB (MAXNB, TENNXB, DIACHI) VALUES
('13000', 'Nhà xuất bản Đại học Oxford', '371 đường Nguyễn Kiệm Quận Gò Vấp'),
('13001', 'Nhà xuất bản Đại học Cambridge', '371 đường Nguyễn Kiệm Quận Gò Vấp'),
('13002', 'Nhà xuất bản Usborne', '371 đường Nguyễn Kiệm Quận Gò Vấp'),
('13003', 'Nhà xuất bản DK', '371 đường Nguyễn Kiệm Quận Gò Vấp');

INSERT INTO MALOAI (MALOAI, TENLOAI) VALUES
('14000', 'CODE Cơ bản'),
('14001', 'Nâng cao');


INSERT INTO NGONNGU (MANN, TENNN) VALUES
(15000, 'Tiếng Anh'),
(15001, 'Tiếng Việt');

INSERT INTO SINHVIEN (MASV, TENSV, LOP, SODT, DIACHI) VALUES
(16000, N'Trần Văn A', 'K15DCPM07', '0123456789', N'371 đường Nguyễn Kiệm Quận Gò Vấp'),
(16001, N'Nguyễn Thị B', 'K15DCPM07', '0987654321', N'371 đường Nguyễn Kiệm Quận Gò Vấp'),
(16002, N'Lê Minh C', 'K15DCPM07', '0369852147', N'371 đường Nguyễn Kiệm Quận Gò Vấp'),
(16003, N'Phạm Thị D', 'K15DCPM07', '0765432981', N'371 đường Nguyễn Kiệm Quận Gò Vấp'),
(16004, N'Huỳnh Văn E', 'K15DCPM07', '0932145678', N'371 đường Nguyễn Kiệm Quận Gò Vấp');


INSERT INTO KHO (MAKHO, TENKHO, SUCCHUA) VALUES
(17000, N'Kho số 1', 300),
(17001, N'Kho số 2', 300);

INSERT INTO PHIEUMUON (MAPM, NGAYMUON, NGAYTRADUKIEN) VALUES
(18000, '2024-10-01', '2024-10-23'),
(18001, '2024-10-02', '2024-10-24'),
(18002, '2024-10-03', '2024-10-25'),
(18003, '2024-10-04', '2024-10-26'),
(18004, '2024-10-05', '2024-10-27'),
(18005, '2024-10-06', '2024-10-28'),
(18006, '2024-10-07', '2024-10-29');

INSERT INTO SACH_TACGIA (MSSACH, MATG) VALUES
(11000, 12000),
(11001, 12001),
(11002, 12002),
(11003, 12003),
(11004, 12004),
(11005, 12005),
(11006, 12006),
(11007, 12007),
(11008, 12008),
(11009, 12009),
(11010, 12010),
(11011, 12011),
(11012, 12012),
(11013, 12013),
(11014, 12014);

INSERT INTO SACH_NHAXB (MSSACH, MAXNB) VALUES
(11000, 13000),
(11001, 13001),
(11002, 13002),
(11003, 13003),
(11004, 13000),
(11005, 13001),
(11006, 13002),
(11007, 13003),
(11008, 13000),
(11009, 13001),
(11010, 13002),
(11011, 13003),
(11012, 13000),
(11013, 13001),
(11014, 13002);




INSERT INTO SACH_LOAISACH (MSSACH, MALOAI) VALUES
(11000, 14000),
(11001, 14001),
(11002, 14000),
(11003, 14001),
(11004, 14000),
(11005, 14001),
(11006, 14000),
(11007, 14001),
(11008, 14000),
(11009, 14001),
(11010, 14000),
(11011, 14001),
(11012, 14000),
(11013, 14001),
(11014, 14000);

INSERT INTO SACH_NGONNGU (MSSACH, MANN) VALUES
(11000, 15000),
(11001, 15001),
(11002, 15000),
(11003, 15001),
(11004, 15000),
(11005, 15001),
(11006, 15000),
(11007, 15001),
(11008, 15000),
(11009, 15001),
(11010, 15000),
(11011, 15001),
(11012, 15000),
(11013, 15001),
(11014, 15000);

INSERT INTO KHO_SACH (MAKHO, MSSACH) VALUES
(17000, 11000),
(17001, 11001),
(17000, 11002),
(17001, 11003),
(17000, 11004),
(17001, 11005),
(17000, 11006),
(17001, 11007),
(17000, 11008),
(17001, 11009),
(17000, 11010),
(17001, 11011),
(17000, 11012),
(17001, 11013),
(17000, 11014);

INSERT INTO SINHVIEN_SACH (MASV, MSSACH) VALUES
(16000, 11000),
(16001, 11001), 
(16002, 11002), 
(16003, 11003),
(16004, 11004), 
(16000, 11005), 
(16001, 11006), 
(16002, 11007), 
(16003, 11008), 
(16004, 11009), 
(16000, 11010), 
(16001, 11011), 
(16002, 11012), 
(16003, 11013), 
(16004, 11014);

INSERT INTO SINHVIEN_PHIEUMUON (MASV, MAPM) VALUES
(16000, 18000),
(16001, 18001),
(16002, 18002),
(16003, 18003),
(16004, 18004),
(16000, 18005);

SELECT SV.MASV, SV.TENSV, COUNT(SS.MSSACH) AS SO_SACH_MUON
FROM SINHVIEN SV
LEFT JOIN SINHVIEN_SACH SS ON SV.MASV = SS.MASV
GROUP BY SV.MASV, SV.TENSV;

SELECT S.TENSACH, TG.TENTACGIA
FROM SACH S
JOIN SACH_TACGIA ST ON S.MSSACH = ST.MSSACH
JOIN TACGIA TG ON ST.MATG = TG.MATG;

SELECT S.*
FROM SACH S
JOIN SACH_NHAXB SN ON S.MSSACH = SN.MSSACH
WHERE SN.MAXNB = 13000;

SELECT S.* 
FROM SACH S
JOIN KHO_SACH KS ON S.MSSACH = KS.MSSACH
WHERE KS.MAKHO = 17000;

SELECT NN.TENNN, COUNT(SN.MSSACH) AS SO_LUONG_SACH
FROM NGONNGU NN
JOIN SACH_NGONNGU SN ON NN.MANN = SN.MANN
GROUP BY NN.TENNN;


SELECT SV.MASV, SV.TENSV, COUNT(SS.MSSACH) AS SO_SACH_MUON
FROM SINHVIEN SV
JOIN SINHVIEN_SACH SS ON SV.MASV = SS.MASV
GROUP BY SV.MASV, SV.TENSV;


--store procedures
CREATE PROCEDURE ThemSach
    @TENSACH NVARCHAR(50),
    @NAMXB SMALLDATETIME,
    @SL TINYINT
AS
BEGIN
    INSERT INTO SACH (TENSACH, NAMXB, SL) VALUES (@TENSACH, @NAMXB, @SL);
END;

CREATE PROCEDURE CapNhatThongTinSach
    @MSSACH SMALLINT,
    @TENSACH NVARCHAR(50),
    @NAMXB SMALLDATETIME,
    @SL TINYINT
AS
BEGIN
    UPDATE SACH
    SET TENSACH = @TENSACH, NAMXB = @NAMXB, SL = @SL
    WHERE MSSACH = @MSSACH;
END;

CREATE PROCEDURE XoaSach
    @MSSACH SMALLINT
AS
BEGIN
    DELETE FROM SACH WHERE MSSACH = @MSSACH;
END;

CREATE PROCEDURE ThongTinChiTietSach
    @MSSACH SMALLINT
AS
BEGIN
    SELECT *
    FROM SACH
    WHERE MSSACH = @MSSACH;
END;

CREATE PROCEDURE SachTrongKho
    @MAKHO SMALLINT
AS
BEGIN
    SELECT S.*
    FROM SACH S
    JOIN KHO_SACH KS ON S.MSSACH = KS.MSSACH
    WHERE KS.MAKHO = @MAKHO;
END;
GO
CREATE TRIGGER KiemTraSoLuongSach
ON SACH
AFTER INSERT
AS
BEGIN
    DECLARE @SoLuong INT;
    SELECT @SoLuong = SUM(SL) FROM SACH;

    IF @SoLuong > 1000
    BEGIN
        RAISERROR ('Số lượng sách trong kho đã vượt quá giới hạn.', 16, 1);
        ROLLBACK TRANSACTION;
    END;
END;
GO
CREATE TRIGGER CapNhatSoLuongSach
ON SACH
AFTER INSERT, DELETE
AS
BEGIN
    UPDATE KHO
    SET SUCCHUA = (SELECT SUM(SL) FROM SACH);
END;

GO
CREATE OR ALTER TRIGGER KiemTraNgayMuonSach
ON SINHVIEN_PHIEUMUON
AFTER INSERT
AS
BEGIN
    DECLARE @NgayMuon SMALLDATETIME;
    SELECT @NgayMuon = NGAYMUON FROM PHIEUMUON WHERE MAPM = (SELECT MAPM FROM inserted);

    IF @NgayMuon < '2024-10-01' OR @NgayMuon > '2024-10-07'
    BEGIN
        RAISERROR ('Ngày mượn sách không hợp lệ.', 16, 1);
        ROLLBACK TRANSACTION;
    END;
END;

GO
CREATE OR ALTER TRIGGER KiemTraSoLuongSachMuon
ON SINHVIEN_SACH
AFTER INSERT
AS
BEGIN
    DECLARE @MASV SMALLINT;
    DECLARE @SoSachMuon INT;

    SELECT @MASV = MASV FROM inserted;
    
    SELECT @SoSachMuon = COUNT(*) FROM SINHVIEN_SACH WHERE MASV = @MASV;
    
    IF @SoSachMuon > 5 -- Giả sử 5 là số lượng sách tối đa mà một sinh viên có thể mượn
    BEGIN
        RAISERROR ('Số lượng sách mượn đã đạt tối đa.', 16, 1);
        ROLLBACK TRANSACTION;
    END;
END;

